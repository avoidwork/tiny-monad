{"name":"tiny-monad","tagline":"tiny-monad is a Monad factory to help get you started working with Monads","body":"**tiny-monad** is a Monad factory to help get you started working with Monads. `Monad()` takes an optional `modifier` Function to run when instantiating instances, which receives `monad` & `value` as it's parameters. What's a Monad? Well, it's this pattern that makes composing Functions / behaviors really easy, and it works well with Functional Reactive Programming for creating UIs, etc..\r\n\r\n```javascript\r\nvar AlertMonad = Monad().lift('alert', alert),\r\n    hello      = AlertMonad('Hello!'),\r\n    goodbye    = AlertMonad('Goodbye!');\r\n\r\nhello.alert();\r\n\r\n...\r\n\r\ngoodbye.alert();\r\n```\r\n\r\n[![build status](https://secure.travis-ci.org/avoidwork/tiny-monad.png)](http://travis-ci.org/avoidwork/tiny-monad)\r\n\r\n## API\r\n\r\n### bind\r\n#### Method\r\nBinds a Function to the Monad and executes it\r\n\r\n\tparam  {Function} fn Function to bind\r\n\treturn {Object}      Result of Monad value & fn\r\n\r\n**Example**\r\n\r\n```javascript\r\nvar x = Monad();\r\n\r\nx('Hello World').bind(alert);\r\n```\r\n\r\n### lift\r\n#### Method\r\n\r\nLifts a non-monadic function into the Monad\r\n\r\n\tparam  {String} name Name of Function\r\n\tparam  {String} fn   Function to 'lift'\r\n\treturn {Object}      Monad constructor\r\n\r\n**Example**\r\n\r\n```javascript\r\nvar alertify = Monad().lift('alert', alert),\r\n    instance = alertify('Hello World!');\r\n\r\ninstance.alert();\r\n```\r\n\r\n### method\r\n#### Method\r\n\r\nAdds a function to the Monad prototype\r\n\r\n\tparam  {String} name Name of Function\r\n\tparam  {String} fn   Function\r\n\treturn {Object}      Monad constructor\r\n\r\n**Example**\r\n\r\n```javascript\r\nvar alertify = Monad().method('alert', alert),\r\n    instance = alertify('Hello World!');\r\n\r\ninstance.alert();\r\n```\r\n\r\n## License\r\nCopyright (c) 2014 Jason Mulligan  \r\nLicensed under the BSD-3 license.\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}